(function ($) {
    var SA = window.SA;

    /* Generating graphs */
    SA.graphLibs['flotr2.min.js'] = function () {
        var i,
            len,
            objs = [],
            trends = [],
            trendsHeaders = [],
            tmp  = {};

        $('#content_inner').attr('class', 'sa-flotr2');

        $('.social-wrap').each(function (i) { // FIXME: This is crap. Revise.
            if (i % 2 === 0) {
                $(this).addClass('sa-r');
            } else {
                $(this).addClass('sa-l');
            }
        });

        // Fetch headings and init sub-arrays
        $('#sa-trends thead th').each(function (j) {
            trendsHeaders.push($(this).text());
            trends[j] = [];
        });

        // Parse table
        $('#sa-trends tbody tr').each(function (i) {
            $(this).find('td').each(function (j) {
                trends[j].push([i, parseInt($(this).text(), 10)]);
            });
        });

        // Add label to the data (used for the legend)
        for (i = 0, len = trends.length; i < len; i += 1) {
            tmp.label = trendsHeaders[i];
            tmp.data = trends[i];
            trends[i] = tmp;
            tmp = {};
        }

        // Draw graph
        Flotr.draw($('.sa-trends-graph')[0], trends,
            {
                xaxis: {
                    showLabels: false
                },
                mouse: {
                    track: true
                }
            });

        // Pie charts
        $('.sa-pie').each(function () {
            var $this = $(this),
                graphContainer = $('.' + $(this).attr('id') + '-graph');

            $this.find('tbody tr').each(function () {
                var $this = $(this);
                tmp.label = $this.children('th').text();
                tmp.data  = [[0, parseInt($this.children('td').text(), 10)]];
                objs.push(tmp);
                tmp = {};
            });

            Flotr.draw(graphContainer[0], objs,
                {
                    grid: {
                        verticalLines: false,
                        horizontalLines: false
                    },
                    xaxis: {
                        showLabels: false
                    },
                    yaxis: {
                        showLabels: false
                    },
                    pie: {
                        show: true,
                        explode: 6
                    },
                    mouse: {
                        track: true,
                        trackFormatter: function () { return obj.series.label + ': ' + parseInt(obj.y, 10); },
                        relative: true
                    },
                    legend: {
                        show: false
                    }
                });

            objs = [];
        });
    };
}(jQuery));